# -*- coding: utf-8 -*-
"""Une autre copie de Sales.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OvWxPa6ryxQYafCTsKpIbIE4_r9O_yPY
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error
import matplotlib.pyplot as plt

data = pd.read_csv('Advertising.csv')

X = data[['TV', 'Radio', 'Newspaper']]
y = data['Sales']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.svm import SVR

svm_model = SVR()

svm_model.fit(X_train, y_train)

TV_spend = float(input('Enter TV advertising spend: '))
radio_spend = float(input('Enter radio advertising spend: '))
newspaper_spend = float(input('Enter newspaper advertising spend: '))

user_prediction = svm_model.predict([[TV_spend, radio_spend, newspaper_spend]])
print(f'SVM Predicted Sales: {user_prediction[0]}')

svm_predictions_test = svm_model.predict(X_test)
mae = mean_absolute_error(y_test, svm_predictions_test)
print(f'Mean Absolute Error on Test Set: {mae}')

plt.scatter(X_test['TV'], y_test, color='black', label='Actual Sales')
plt.scatter(X_test['TV'], svm_predictions_test, color='blue', label='SVM Predicted Sales')
plt.xlabel('TV Ad Spend')
plt.ylabel('Sales')
plt.legend()
plt.show()