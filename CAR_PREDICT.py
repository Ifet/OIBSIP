# -*- coding: utf-8 -*-
"""Another copy of Car.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nY5zmaqDFzyCMoJzp366yUV48_zYMai9
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline

df = pd.read_csv('car.csv')

df.head()

features = df[['Present_Price', 'Driven_kms', 'Fuel_Type', 'Selling_type', 'Transmission']]

target = df['Selling_Price']

X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

categorical_columns = ['Fuel_Type', 'Selling_type','Transmission']

for col in categorical_columns:
    if col in features.columns:
        features = pd.get_dummies(features, columns=[col])

X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

categorical_columns = ['Fuel_Type', 'Selling_type']

missing_columns = [col for col in categorical_columns if col not in features.columns]
if missing_columns:
    print(f"Error: Categorical columns {missing_columns} not found in the dataset.")
else:
    features = pd.get_dummies(features, columns=categorical_columns)

    X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

    scaler = StandardScaler()
    X_train_scaled = scaler.fit_transform(X_train)
    X_test_scaled = scaler.transform(X_test)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

model = LinearRegression()
model.fit(X_train_scaled, y_train)

predictions = model.predict(X_test_scaled)

mse = mean_squared_error(y_test, predictions)
print(f'Mean Squared Error: {mse}')