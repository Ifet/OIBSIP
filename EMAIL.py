# -*- coding: utf-8 -*-
"""Yet another copy of Email.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KZdBYsS8EnC32SGOZVBvHkI_bTp49M3z
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.svm import SVC
from sklearn import metrics
import joblib

def load_dataset():
    df = pd.read_csv('spam.csv', encoding='latin1')
    df['spamornot'] = df['spamornot'].map({'ham': 0, 'spam': 1})
    return df

def preprocess_text(texts):
    return texts

def train_model():
    df = load_dataset()
    df['texts'] = df['texts'].apply(preprocess_text)

    X_train, X_test, y_train, y_test = train_test_split(df['texts'], df['spamornot'], test_size=0.2, random_state=42)

    vectorizer = TfidfVectorizer()
    X_train_vectorized = vectorizer.fit_transform(X_train)
    X_test_vectorized = vectorizer.transform(X_test)

    model = SVC(kernel='linear')
    model.fit(X_train_vectorized, y_train)

    y_pred = model.predict(X_test_vectorized)
    accuracy = metrics.accuracy_score(y_test, y_pred)
    precision = metrics.precision_score(y_test, y_pred)
    recall = metrics.recall_score(y_test, y_pred)
    f1 = metrics.f1_score(y_test, y_pred)

    print(f"Model Evaluation - Accuracy: {accuracy}, Precision: {precision}, Recall: {recall}, F1 Score: {f1}")
    print("Spam email detector model trained and saved.")

    joblib.dump(model, 'spam_detector_model.pkl')
    joblib.dump(vectorizer, 'spam_vectorizer.pkl')

def classify_text(text, model, vectorizer):
    text_vectorized = vectorizer.transform([text])
    prediction = model.predict(text_vectorized)
    return "Spam" if prediction[0] == 1 else "Not Spam"

def main():

    try:
        model = joblib.load('spam_detector_model.pkl')
        vectorizer = joblib.load('spam_vectorizer.pkl')
    except FileNotFoundError:
        print("Model not found. Training the model...")
        train_model()
        model = joblib.load('spam_detector_model.pkl')
        vectorizer = joblib.load('spam_vectorizer.pkl')


    user_text = input("Enter the text you want to classify: ")
    result = classify_text(user_text, model, vectorizer)
    print(f"The entered text is classified as: {result}")

if __name__ == "__main__":
    main()